{
  "id": "f17426fe-92cf-4481-be1c-28cb3b2d5ce1",
  "prevId": "b934a6a4-9355-4211-8e8e-9d1065cdf28a",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_user_id_user_id_fk": {
          "name": "account_user_id_user_id_fk",
          "tableFrom": "account",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_user_id_user_id_fk": {
          "name": "session_user_id_user_id_fk",
          "tableFrom": "session",
          "columnsFrom": [
            "user_id"
          ],
          "tableTo": "user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "session_token_unique": {
          "name": "session_token_unique",
          "columns": [
            "token"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        },
        "image": {
          "name": "image",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "columns": [
            "email"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verification": {
      "name": "verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "identifier": {
          "name": "identifier",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.access_rank": {
      "name": "access_rank",
      "schema": "",
      "columns": {
        "access_type": {
          "name": "access_type",
          "type": "access_type",
          "typeSchema": "public",
          "primaryKey": true,
          "notNull": true
        },
        "rank": {
          "name": "rank",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "access_rank_rank_unique": {
          "name": "access_rank_rank_unique",
          "columns": [
            "rank"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "checkConstraints": {
        "chk_rank_positive": {
          "name": "chk_rank_positive",
          "value": "\"access_rank\".\"rank\" > 0"
        },
        "chk_rank_matches_enum": {
          "name": "chk_rank_matches_enum",
          "value": "\n       (\"access_rank\".\"access_type\" = 'public' AND \"access_rank\".\"rank\" = 1)\n    OR (\"access_rank\".\"access_type\" = 'team'   AND \"access_rank\".\"rank\" = 2)\n    OR (\"access_rank\".\"access_type\" = 'owner'  AND \"access_rank\".\"rank\" = 3)\n    "
        }
      },
      "isRLSEnabled": false
    },
    "public.item": {
      "name": "item",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuidv7_sub_ms()"
        },
        "parent_id": {
          "name": "parent_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "space_id": {
          "name": "space_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "mime_type": {
          "name": "mime_type",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "size_byte": {
          "name": "size_byte",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "item_type": {
          "name": "item_type",
          "type": "item_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "generated": {
            "type": "stored",
            "as": "CASE WHEN mime_type IS NULL \n                   THEN 'folder'::item_type \n                   ELSE 'file'::item_type \n              END"
          }
        },
        "trashed_delete_dt": {
          "name": "trashed_delete_dt",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "access_type": {
          "name": "access_type",
          "type": "access_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_item_space": {
          "name": "idx_item_space",
          "columns": [
            {
              "expression": "space_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "idx_item_parent": {
          "name": "idx_item_parent",
          "columns": [
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "idx_item_trash_time": {
          "name": "idx_item_trash_time",
          "columns": [
            {
              "expression": "trashed_delete_dt",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "idx_item_created_by": {
          "name": "idx_item_created_by",
          "columns": [
            {
              "expression": "created_by",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "idx_item_space_parent_created": {
          "name": "idx_item_space_parent_created",
          "columns": [
            {
              "expression": "space_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "created_at",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "idx_item_space_parent": {
          "name": "idx_item_space_parent",
          "columns": [
            {
              "expression": "space_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        },
        "idx_item_space_not_trashed": {
          "name": "idx_item_space_not_trashed",
          "columns": [
            {
              "expression": "space_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "where": "\"item\".\"trashed_delete_dt\" IS NULL",
          "concurrently": false
        },
        "idx_item_space_trashed": {
          "name": "idx_item_space_trashed",
          "columns": [
            {
              "expression": "space_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "where": "\"item\".\"trashed_delete_dt\" IS NOT NULL",
          "concurrently": false
        },
        "idx_item_parent_live_name": {
          "name": "idx_item_parent_live_name",
          "columns": [
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "where": "\"item\".\"trashed_delete_dt\" IS NULL",
          "concurrently": false
        },
        "idx_item_parent_trash_name": {
          "name": "idx_item_parent_trash_name",
          "columns": [
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "where": "\"item\".\"trashed_delete_dt\" IS NOT NULL",
          "concurrently": false
        },
        "idx_item_expire": {
          "name": "idx_item_expire",
          "columns": [
            {
              "expression": "trashed_delete_dt",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "where": "\"item\".\"trashed_delete_dt\" IS NOT NULL",
          "concurrently": false
        },
        "uq_sibling_live": {
          "name": "uq_sibling_live",
          "columns": [
            {
              "expression": "space_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "parent_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "with": {},
          "method": "btree",
          "where": "\"item\".\"trashed_delete_dt\" IS NULL",
          "concurrently": false
        },
        "uq_root_live": {
          "name": "uq_root_live",
          "columns": [
            {
              "expression": "space_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": true,
          "with": {},
          "method": "btree",
          "where": "\"item\".\"parent_id\" IS NULL AND \"item\".\"trashed_delete_dt\" IS NULL",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "item_parent_id_item_id_fk": {
          "name": "item_parent_id_item_id_fk",
          "tableFrom": "item",
          "columnsFrom": [
            "parent_id"
          ],
          "tableTo": "item",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "item_space_id_space_id_fk": {
          "name": "item_space_id_space_id_fk",
          "tableFrom": "item",
          "columnsFrom": [
            "space_id"
          ],
          "tableTo": "space",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "item_created_by_user_id_fk": {
          "name": "item_created_by_user_id_fk",
          "tableFrom": "item",
          "columnsFrom": [
            "created_by"
          ],
          "tableTo": "user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {
        "chk_item_semantics": {
          "name": "chk_item_semantics",
          "value": "\n      (\n        (\"item\".\"item_type\" = 'file' AND \"item\".\"mime_type\" IS NOT NULL AND \"item\".\"size_byte\" IS NOT NULL)\n        OR\n        (\"item\".\"item_type\" = 'folder' AND \"item\".\"mime_type\" IS NULL AND \"item\".\"size_byte\" IS NULL)\n      )\n    "
        },
        "chk_item_not_self_parent": {
          "name": "chk_item_not_self_parent",
          "value": "\"item\".\"parent_id\" IS NULL OR \"item\".\"parent_id\" <> \"item\".\"id\""
        },
        "chk_size_non_negative": {
          "name": "chk_size_non_negative",
          "value": "\"item\".\"size_byte\" IS NULL OR \"item\".\"size_byte\" >= 0::bigint"
        },
        "chk_item_name_not_empty": {
          "name": "chk_item_name_not_empty",
          "value": "\"item\".\"name\" <> ''"
        },
        "chk_valid_delete_dt": {
          "name": "chk_valid_delete_dt",
          "value": "\"item\".\"trashed_delete_dt\" IS NULL OR \"item\".\"trashed_delete_dt\" > \"item\".\"created_at\""
        }
      },
      "isRLSEnabled": false
    },
    "public.space": {
      "name": "space",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "uuidv7_sub_ms()"
        },
        "name": {
          "name": "name",
          "type": "varchar(256)",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "space_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_by": {
          "name": "created_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "owned_by": {
          "name": "owned_by",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "access_type": {
          "name": "access_type",
          "type": "access_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_space_created_by": {
          "name": "idx_space_created_by",
          "columns": [
            {
              "expression": "created_by",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "with": {},
          "method": "btree",
          "concurrently": false
        }
      },
      "foreignKeys": {
        "space_created_by_user_id_fk": {
          "name": "space_created_by_user_id_fk",
          "tableFrom": "space",
          "columnsFrom": [
            "created_by"
          ],
          "tableTo": "user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        },
        "space_owned_by_user_id_fk": {
          "name": "space_owned_by_user_id_fk",
          "tableFrom": "space",
          "columnsFrom": [
            "owned_by"
          ],
          "tableTo": "user",
          "columnsTo": [
            "id"
          ],
          "onUpdate": "no action",
          "onDelete": "cascade"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "uq_space_owner_name": {
          "name": "uq_space_owner_name",
          "columns": [
            "owned_by",
            "name"
          ],
          "nullsNotDistinct": false
        },
        "uq_space_team_name": {
          "name": "uq_space_team_name",
          "columns": [
            "type",
            "name"
          ],
          "nullsNotDistinct": false
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {},
  "schemas": {},
  "views": {
    "public.item_with_effective_access": {
      "name": "item_with_effective_access",
      "schema": "public",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "space_id": {
          "name": "space_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "effective_rank": {
          "name": "effective_rank",
          "type": "smallint",
          "primaryKey": false,
          "notNull": false
        },
        "effective_access": {
          "name": "effective_access",
          "type": "access_type",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "\n  WITH RECURSIVE chain AS (\n    SELECT  i.id,\n            i.space_id,\n            i.parent_id,\n            i.access_type,\n            ar.rank\n    FROM   item i\n    JOIN   access_rank ar USING (access_type)\n\n    UNION ALL\n\n    SELECT  c.id,\n            p.space_id,\n            p.parent_id,\n            p.access_type,\n            ar.rank\n    FROM   chain c\n    JOIN   item p ON p.id = c.parent_id\n    JOIN   access_rank ar USING (access_type)\n  ),\n  ranked AS (\n    SELECT\n      id,\n      space_id,\n      access_type,\n      rank,\n      ROW_NUMBER() OVER (PARTITION BY id, space_id ORDER BY rank DESC) AS rn\n    FROM chain\n  )\n  SELECT\n    id,\n    space_id,\n    rank        AS effective_rank,\n    access_type AS effective_access\n  FROM ranked\n  WHERE rn = 1;\n",
      "materialized": true,
      "isExisting": false
    }
  },
  "sequences": {},
  "roles": {},
  "policies": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}